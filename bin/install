#!/usr/bin/env bash

set -e
set -o pipefail

install_doctl() {
  local -r version=$2
  local -r install_path=$3
  local -r tmp_download_dir=$4

  local -r bin_install_path="${install_path}/bin"
  local -r binary_path="${bin_install_path}/doctl"

  local platform
  local download_url
  local download_path

  platform=$(get_platform)
  download_url=$(get_download_url "$version" "$platform")
  download_path="${tmp_download_dir}"/$(get_filename "$version" "$platform")

  echo "Downloading doctl from ${download_url}"
  curl -Lo "${download_path}" "${download_url}"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f "${binary_path}" 2>/dev/null || true

  echo "Copying binary"
  tar xf "${download_path}" -C "${bin_install_path}"
  chmod +x "${binary_path}"

  echo "Cleaning up downloads"
  rm -f "${download_path}"
}

get_platform() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_filename() {
  local -r version=$1
  local -r platform=$2

  echo "doctl-${version}-${platform}-amd64.tar.gz"
}

get_download_url() {
  local -r version=$1
  local -r platform=$2
  local filename
  filename=$(get_filename "$version" "$platform")

  echo "https://github.com/digitalocean/doctl/releases/download/v${version}/${filename}"
}

# probably should verify ASDF_INSTALL_VERSION is 1.21.1+
tmp_download_dir="$(mktemp -d -t 'asdf_XXXXXXXX')"
trap 'rm -rf "${tmp_download_dir}"' EXIT
install_doctl "${ASDF_INSTALL_TYPE}" "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}" "$tmp_download_dir"